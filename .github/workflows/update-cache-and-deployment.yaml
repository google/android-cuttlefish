name: Update bazel cache and deploy artifacts

on:
  workflow_call:
    inputs:
      update-cache:
        required: true
        type: boolean
      deploy-channel:
        required: false
        type: string
    secrets:
      artifact-registry-uploader-json-creds:
        required: true

jobs:
  set-variables:
    runs-on: ubuntu-22.04
    outputs:
      yyyymmddhhmm: ${{ steps.yyyymmddhhmm.outputs.time }}
    steps:
    - name: Set YYYYMMDDHHMM
      id: yyyymmddhhmm
      run: echo "time=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
    - name: Echo YYYYMMDDHHMM
      run: echo ${{ steps.yyyymmddhhmm.outputs.time }}
  update-cvd-test-bazel-cache:
    if: inputs.update-cache
    runs-on: ubuntu-24.04
    steps:
    - name: Free disk space
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        large-packages: false
        swap-storage: false
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Mount bazel cache
      uses: ./.github/actions/mount-bazel-cache
      with:
        action-name: run-cvd-unit-tests
        writable: true
    - name: Run cvd unit tests
      uses: ./.github/actions/run-cvd-unit-tests
  update-bazel-cache-and-deploy-debian-package-amd64:
    needs: [set-variables]
    environment: deployment
    runs-on: ubuntu-22.04
    steps:
    - name: Free disk space
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # aka v1.3.1
      with:
        docker-images: false
        swap-storage: false
    - name: checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Mount bazel cache
      uses: ./.github/actions/mount-bazel-cache
      with:
        action-name: build-debian-packages
        writable: '${{ inputs.update-cache }}'
    - name: Build CF host debian packages
      uses: ./.github/actions/build-debian-packages
      with:
        deploy-channel: ${{ inputs.deploy-channel }}
        yyyymmddhhmm: ${{ needs.set-variables.outputs.yyyymmddhhmm }}
    - name: Authentication on GCP project android-cuttlefish-artifacts
      if: inputs.deploy-channel != ''
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Deploy CF host debian packages
      if: inputs.deploy-channel != ''
      uses: ./.github/actions/deploy-debian-packages
      with:
        deploy-channel: ${{ inputs.deploy-channel }}
        path: .
  update-bazel-cache-and-deploy-debian-package-arm64:
    needs: [set-variables]
    environment: deployment
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Free disk space
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # aka v1.3.1
      with:
        docker-images: false
        swap-storage: false
    - name: checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Mount bazel cache
      uses: ./.github/actions/mount-bazel-cache
      with:
        action-name: build-debian-packages
        writable: '${{ inputs.update-cache }}'
    - name: Build CF host debian packages
      uses: ./.github/actions/build-debian-packages
      with:
        deploy-channel: ${{ inputs.deploy-channel }}
        yyyymmddhhmm: ${{ needs.set-variables.outputs.yyyymmddhhmm }}
    - name: Authentication on GCP project android-cuttlefish-artifacts
      if: inputs.deploy-channel != ''
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Deploy CF host debian packages
      if: inputs.deploy-channel != ''
      uses: ./.github/actions/deploy-debian-packages
      with:
        deploy-channel: ${{ inputs.deploy-channel }}
        path: .

  deploy-docker-image-amd64:
    if: inputs.deploy-channel != ''
    needs: [set-variables, update-bazel-cache-and-deploy-debian-package-amd64]
    environment: deployment
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build docker image
      run: docker/image-builder.sh -m ${{ inputs.deploy-channel }}
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Login to Artifact Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # aka v3.5.0
      with:
        registry: us-docker.pkg.dev
        username: _json_key
        password: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Deploy docker image
      uses: ./.github/actions/deploy-docker-image
      with:
        arch: amd64
        deploy-channel: ${{ inputs.deploy-channel }}
        yyyymmddhhmm: ${{ needs.set-variables.outputs.yyyymmddhhmm }}
  deploy-docker-image-arm64:
    if: inputs.deploy-channel != ''
    needs: [set-variables, update-bazel-cache-and-deploy-debian-package-arm64]
    environment: deployment
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build docker image
      run: docker/image-builder.sh -m ${{ inputs.deploy-channel }}
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Login to Artifact Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # aka v3.5.0
      with:
        registry: us-docker.pkg.dev
        username: _json_key
        password: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Deploy docker image
      uses: ./.github/actions/deploy-docker-image
      with:
        arch: arm64
        deploy-channel: ${{ inputs.deploy-channel }}
        yyyymmddhhmm: ${{ needs.set-variables.outputs.yyyymmddhhmm }}
  deploy-docker-manifest:
    if: inputs.deploy-channel != ''
    needs: [set-variables, deploy-docker-image-amd64, deploy-docker-image-arm64]
    environment: deployment
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Login to Artifact Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # aka v3.5.0
      with:
        registry: us-docker.pkg.dev
        username: _json_key
        password: '${{ secrets.artifact-registry-uploader-json-creds }}'
    - name: Deploy manifests
      run: |
        case "${{ inputs.deploy-channel }}" in
          stable)
            # Stable version tag : X.Y.Z
            SEMVER=$(echo ${{ github.ref_name }} | grep -oE '[0-9]+.[0-9]+.[0-9]+')
            TAG="${SEMVER}"
            ;;
          unstable)
            # Unstable version tag : X.Y-<Github SHA 8 digit>
            SEMVER=$(echo ${{ github.ref_name }} | grep -oE '[0-9]+.[0-9]+')
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
            TAG="${SEMVER}-${SHORT_SHA}"
            ;;
          nightly)
            # Nightly version tag : gitYYYYMMDDHHMM-<Github SHA 8 digit>
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
            TAG="git${{ needs.set-variables.outputs.yyyymmddhhmm }}-${SHORT_SHA}"
            ;;
          *)
            exit 1
            ;;
        esac
        IMAGE=us-docker.pkg.dev/android-cuttlefish-artifacts/cuttlefish-orchestration/cuttlefish-orchestration

        for MANIFEST_TAG in ${TAG} ${{ inputs.deploy-channel }}; do
          docker manifest create ${IMAGE}:${MANIFEST_TAG} \
            --amend ${IMAGE}:${TAG}-amd64 \
            --amend ${IMAGE}:${TAG}-arm64
          docker manifest push ${IMAGE}:${MANIFEST_TAG}
        done
