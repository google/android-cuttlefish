name: Presubmit 

on: [pull_request, push]

jobs:
  build-orchestrator:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Install dependencies
      uses: actions/setup-go@v3
      with:
        go-version: '1.13.15'
    - run: go version
    - name: Vet Test Build
      run: cd frontend/src/host_orchestrator && go vet ./... && go test ./... && go build ./...
  build-debian-package:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.build-orchestrator.result == 'success' }}
    needs: [build-orchestrator]
    container:
      # don't forget to also update debs-builder-docker/Dockerfile.debbld when updating this base image
      image: debian@sha256:6a8bad8d20e1ca5ecbb7a314e51df6fca73fcce19af2778550671bdd1cbe7b43 # aka stable-20211011
    steps:
    - name: setup apt
      run: apt update -y && apt upgrade -y
    - name: install debuild dependencies
      run: apt install -y git devscripts config-package-dev debhelper-compat golang
    - name: checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
      with:
        path: "android-cuttlefish"
    - name: build base debian package
      run: cd android-cuttlefish/base && debuild -i -us -uc -b
    - name: install base debian package
      run: dpkg -i android-cuttlefish/cuttlefish-base_*_*64.deb || apt-get install -f -y
    - name: build frontend debian packages
      run: cd android-cuttlefish/frontend && debuild -i -us -uc -b
    - name: install user debian package
      run: dpkg -i android-cuttlefish/cuttlefish-user_*_*64.deb || apt-get install -f -y
