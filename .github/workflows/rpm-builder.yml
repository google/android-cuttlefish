name: RPM Builder

on:
  push:
  pull_request:
    paths:
      - '.github/workflows/rpm-builder.yml'
      - '.github/workflows/reusable-docker.yml'
      - '.github/workflows/rhel-integration.yml'
      - '.github/workflows/rhel-orchestration.yml'
      - 'docker/rpm-builder/**'
      - 'tools/rpmbuild/**'

jobs:

  create_image:
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      max-parallel: 2
      fail-fast: true
      matrix:
        platform: [ linux/amd64, linux/arm64 ]
        include:
          - platform: linux/amd64
            runner: ${{ VARS.RUNNER_X86 }}
            image: rpm-builder-amd64
          - platform: linux/arm64
            runner: ${{ VARS.RUNNER_ARM }}
            image: rpm-builder-arm64

    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'docker/login-action@v3'
        id: container-registry
        with:
          registry: 'ghcr.io'
          username: ${{ GITHUB.ACTOR }}
          password: ${{ SECRETS.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - uses: 'docker/metadata-action@v5'
        id: metadata
        with:
          images: ghcr.io/${{ GITHUB.ACTOR }}/${{ MATRIX.IMAGE }}
          tags: |
            type=sha
            latest

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - uses: 'docker/setup-buildx-action@v3'
      - uses: 'docker/setup-qemu-action@v3'
        if: ${{ MATRIX.PLATFORM != 'linux/amd64' }}
        with:
          platforms: arm64

      - uses: 'docker/build-push-action@v6'
        id: build
        with:
          context: .
          file: docker/rpm-builder/Dockerfile
          push: ${{ GITHUB.EVENT_NAME != 'pull_request' }}
          platforms: ${{ MATRIX.PLATFORM }}
          labels: ${{ STEPS.METADATA.OUTPUTS.LABELS }}
          tags: ${{ STEPS.METADATA.OUTPUTS.TAGS }}
          target: builder
          build-args: |
            GITHUB_USER=${{ GITHUB.ACTOR }}
            GITHUB_REPO=${{ ENV.REPO_NAME }}
            GITHUB_BRANCH=${{ GITHUB.HEAD_REF || GITHUB.REF_NAME }}
          # PGP_SIGNATURE=${{ INPUTS.PGP_SIGNATURE }}
          # PGP_PASSPHRASE=${{ INPUTS.PGP_PASSPHRASE }}

      # Note: The digest comes from `buildx`, not the metadata.
      # https://github.com/actions/attest-build-provenance
      - uses: 'actions/attest-build-provenance@v2'
        with:
          subject-name: ghcr.io/${{ GITHUB.ACTOR }}/${{ MATRIX.IMAGE }}
          subject-digest: ${{ STEPS.BUILD.OUTPUTS.DIGEST }}
          push-to-registry: true

  # This must be a job, in order to pass `secrets`.
  build_packages:
    uses: ./.github/workflows/reusable-docker.yml
    needs: [ create_image ]
    secrets:
#     TODO: RPM repository PGP signature & passphrase would be required to sign RPM packages.
#     pgp_signature: ${{ SECRETS.PGP_SIGNATURE }}
#     pgp_passphrase: ${{ SECRETS.PGP_PASSPHRASE }}
      token: ${{ SECRETS.GITHUB_TOKEN }}
    with:
      registry: 'ghcr.io'
      username: ${{ GITHUB.ACTOR }}
      repository: ${{ GITHUB.EVENT.REPOSITORY.NAME }}
      branch: ${{ GITHUB.HEAD_REF || GITHUB.REF_NAME }}
      runner: ${{ MATRIX.RUNNER }}
      image: ${{ MATRIX.IMAGE }}
      platform: ${{ MATRIX.PLATFORM }}
      artifact: ${{ MATRIX.ARTIFACT }}
    strategy:
      max-parallel: 2
      matrix:
        platform: [ linux/amd64, linux/arm64 ]
        include:
          - platform: linux/amd64
            runner: ${{ VARS.RUNNER_X86 }}
            image: rpm-builder-amd64
            artifact: android-cuttlefish-rhel9-amd64-unsigned
          - platform: linux/arm64
            runner: ${{ VARS.RUNNER_ARM }}
            image: rpm-builder-arm64
            artifact: android-cuttlefish-rhel9-arm64-unsigned

  # This must be a job, in order to pass `secrets`.
  preinstall_integration:
    uses: ./.github/workflows/rhel-integration.yml
    needs: [ build_packages ]
    secrets:
      token: ${{ SECRETS.GITHUB_TOKEN }}
    with:
      registry: 'ghcr.io'
      username: ${{ GITHUB.ACTOR }}
      platform: ${{ MATRIX.PLATFORM }}
      runner: ${{ MATRIX.RUNNER }}
      image: ${{ MATRIX.IMAGE }}

    strategy:
      max-parallel: 2
      fail-fast: true
      matrix:
        platform: [ linux/amd64, linux/arm64 ]
        include:
          - platform: linux/amd64
            runner: ubuntu-22.04
            image: rhel-integration-amd64
          - platform: linux/arm64
            runner: ubuntu-22.04-arm
            image: rhel-integration-arm64

  # This must be a job, in order to pass `secrets`.
  preinstall_orchestration:
    uses: ./.github/workflows/rhel-orchestration.yml
    needs: [ build_packages ]
    secrets:
      token: ${{ SECRETS.GITHUB_TOKEN }}
    with:
      registry: 'ghcr.io'
      username: ${{ GITHUB.ACTOR }}
      platform: ${{ MATRIX.PLATFORM }}
      runner: ${{ MATRIX.RUNNER }}
      image: ${{ MATRIX.IMAGE }}
    strategy:
      max-parallel: 2
      fail-fast: true
      matrix:
        platform: [ linux/amd64, linux/arm64 ]
        include:
          - platform: linux/amd64
            runner: ${{ VARS.RUNNER_X86 }}
            image: rhel-orchestration-amd64
          - platform: linux/arm64
            runner: ${{ VARS.RUNNER_ARM }}
            image: rhel-orchestration-arm64

