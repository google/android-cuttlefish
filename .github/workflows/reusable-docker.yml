name: Docker Container

on:
  workflow_call:
    secrets:
      token:
        required: true
    inputs:
      docker-image:
        required: true
        type: string
    outputs:
      builder:
        value: ${{ jobs.docker-run.outputs.builder }}
        description: "Build output"
      testing:
        value: ${{ jobs.docker-run.outputs.testing }}
        description: "Test output"
      integration:
        value: ${{ jobs.docker-run.outputs.integration }}
        description: "Test output"
      orchestration:
        value: ${{ jobs.docker-run.outputs.orchestration }}
        description: "Test output"
jobs:

  docker-run:
    runs-on: ubuntu-latest
    outputs:
      builder: ${{ steps.build-rpm-packages.outputs.result }}
      testing: ${{ steps.test-rpm-packages.outputs.result }}
      integration: ${{ steps.test-integration.outputs.result }}
      orchestration: ${{ steps.test-orchestration.outputs.result }}

    steps:

      # https://github.com/docker/login-action
      - name: Log in to the Container registry
        uses: 'docker/login-action@v3'
        id: container-registry
        with:
          registry: ghcr.io
          username: ${{ GITHUB.ACTOR }}
          password: ${{ SECRETS.TOKEN }}

      # https://docs.docker.com/reference/cli/docker/container/run/
      # https://docs.docker.com/reference/cli/docker/container/cp/
      # --entrypoint ${{ INPUTS.ENTRY-POINT }} cannot be changed with GitHub docker.
      - name: Build RPM packages and copy these to RUNNER.TEMP
        if: ${{ contains(INPUTS.DOCKER-IMAGE, 'builder') }}
        id: build-rpm-packages
        run: |
          mkdir ${{ RUNNER.TEMP }}/home_volume
          docker volume create --opt type=none --opt o=bind --opt device=${{ RUNNER.TEMP }}/home_volume home_volume
          docker run --name rpm-builder --quiet --volume ${{ RUNNER.TEMP }}/home_volume:/home ${{ INPUTS.DOCKER-IMAGE }}
          CID=`docker ps -aqf "name=^rpm-builder$"`
          docker inspect -f {{.Mounts}} $CID
          ls -la ${{ RUNNER.TEMP }}/home_volume
          
          docker cp $CID:/home/android-cuttlefish-rpm.tar.gz ${{ RUNNER.TEMP }}
          
          docker rm rpm-builder
          echo "result=ok" >> $GITHUB_OUTPUT

      # https://github.com/actions/upload-artifact
      - name: Retain Artifacts (*.rpm)
        if: ${{ contains(INPUTS.DOCKER-IMAGE, 'builder') }}
        uses: 'actions/upload-artifact@v4'
        id: retain-rpm-packages
        with:
          path: ${{ RUNNER.TEMP }}/*.tar.gz
          name: android-cuttlefish-rhel
          retention-days: 14

      # https://docs.docker.com/reference/cli/docker/container/run/
      - name: Run package tests
        if: ${{ contains(INPUTS.DOCKER-IMAGE, 'testing') }}
        id: test-rpm-packages
        run: |
          docker run --name rpm-testing --quiet ${{ INPUTS.DOCKER-IMAGE }}
          docker rm rpm-testing
          echo "result=ok" >> $GITHUB_OUTPUT

      # https://docs.docker.com/reference/cli/docker/container/run/
      - name: Run integration tests
        if: ${{ contains(INPUTS.DOCKER-IMAGE, 'integration') }}
        id: test-integration
        run: |
          docker run --name rhel-integration --quiet ${{ INPUTS.DOCKER-IMAGE }}
          echo "result=ok" >> $GITHUB_OUTPUT

      # https://docs.docker.com/reference/cli/docker/container/run/
      - name: Run orchestration test
        if: ${{ contains(INPUTS.DOCKER-IMAGE, 'orchestration') }}
        id: test-orchestration
        run: |
          docker run --name rhel-orchestration --quiet ${{ INPUTS.DOCKER-IMAGE }}
          echo "result=ok" >> $GITHUB_OUTPUT