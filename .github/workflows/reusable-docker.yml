name: Docker Container

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      entry-point:
        required: false
        type: string
        default: '/root/buildscript.sh'
    secrets:
      token:
        required: true

jobs:
  docker-run:
    runs-on: ubuntu-latest
    container:
      image: ${{ INPUTS.DOCKER_IMAGE }}
      # https://docs.github.com/en/actions/writing-workflows/choosing-where-your-workflow-runs/running-jobs-in-a-container#setting-container-resource-options
      options: '--cpus 1 --entrypoint ${{ INPUTS.ENTRY_POINT }}'
      volumes:
        - /home/runner
      credentials:
        username: ${{ GITHUB.ACTOR }}
        password: ${{ SECRETS.TOKEN }}

    steps:

      # https://docs.docker.com/reference/cli/docker/container/cp/
      - name: Copy from container to file-system /tmp
        if: ${{ contains(INPUTS.ENTRY_POINT, 'build') }}
        run: |
          ${{ INPUTS.ENTRY_POINT }}
          export CID=`docker ps --format '{{.ID}}'`
          docker cp $CID:/root/android-cuttlefish/tools/rpmbuild/RPMS/* ${{ GITHUB.WORKSPACE }}
          docker cp $CID:/root/android-cuttlefish/tools/rpmbuild/SRPMS/* ${{ GITHUB.WORKSPACE }}

      # https://github.com/actions/upload-artifact
      - name: Retain Artifacts (*.rpm)
        if: ${{ contains(INPUTS.ENTRY_POINT, 'build') }}
        id: retain-rpm
        uses: 'actions/upload-artifact@v4'
        with:
          name: android-cuttlefish-rpm
          path: |
            ${{ GITHUB.WORKSPACE }}/*.rpm
          retention-days: 14

      # https://github.com/actions/upload-artifact
      - name: Retain Artifacts (*.srpm)
        if: ${{ contains(INPUTS.ENTRY_POINT, 'build') }}
        id: retain-srpm
        uses: 'actions/upload-artifact@v4'
        with:
          name: android-cuttlefish-srpm
          path: |
            ${{ GITHUB.WORKSPACE }}/*.srpm
          retention-days: 14

      # https://docs.docker.com/reference/cli/docker/container/cp/
      - name: Copy from container to file-system /tmp
        if: ${{ contains(INPUTS.ENTRY_POINT, 'test') }}
        run: ${{ INPUTS.ENTRY_POINT }}
