name: Reusable Docker Container Run

on:
  workflow_call:
    secrets:
      token:
        required: true
    inputs:
      registry:
        default: 'ghcr.io'
        required: false
        type: string
      username:
        required: true
        type: string
      image:
        required: true
        type: string
      tag:
        default: latest
        required: false
        type: string
      runner:
          default: ubuntu-latest
          required: false
          type: string
      platform:
        default: linux/amd64
        required: false
        type: string

jobs:

  docker-run:
    runs-on: ${{ INPUTS.RUNNER }}
    outputs:
      filename: ${{ steps.build-rpm-packages.outputs.filename }}
    env:
      DOCKER_OPTIONS: '--name ${{ INPUTS.IMAGE }} --platform ${{ INPUTS.PLATFORM }} --volume ${{ GITHUB.WORKSPACE }}/.cache:/home/runner/.cache --volume ${{ GITHUB.WORKSPACE }}/.rpms:/home/runner/.rpms --attach STDERR --attach STDOUT --quiet'
      DOCKER_IMAGE: ${{ INPUTS.REGISTRY }}/${{ INPUTS.USERNAME }}/${{ INPUTS.IMAGE }}:${{ INPUTS.TAG }}
    steps:

      # https://github.com/docker/login-action
      - name: Log in to the Container registry
        uses: 'docker/login-action@v3'
        id: container-registry
        with:
          registry: ${{ INPUTS.REGISTRY }}
          username: ${{ INPUTS.USERNAME }}
          password: ${{ SECRETS.TOKEN }}

      # https://github.com/actions/cache
      - name: Restore build cache
        if: ${{ contains(INPUTS.IMAGE, 'builder') }}
        id: build-cache-restore
        uses: 'actions/cache/restore@v4'
        with:
          key: build-cache-${{ RUNNER.ARCH }}-${{ hashFiles('/base/cvd/**.bazel') }}
          # restore-keys: build-cache-${{ RUNNER.ARCH }}-
          path: ${{ GITHUB.WORKSPACE }}/.cache

      # https://docs.docker.com/reference/cli/docker/container/run/
      # https://docs.docker.com/reference/cli/docker/container/cp/
      # --entrypoint ${{ INPUTS.ENTRY-POINT }} cannot be changed with GitHub docker.
      - name: Run ${{ INPUTS.REGISTRY }}/${{ INPUTS.USERNAME }}/${{ INPUTS.IMAGE }}:${{ INPUTS.TAG }}
        if: ${{ contains(INPUTS.IMAGE, 'builder') }}
        id: build-rpm-packages
        shell: bash
        run: |
          mkdir -p ${{ GITHUB.WORKSPACE }}/.cache
          mkdir -p ${{ GITHUB.WORKSPACE }}/.rpms
          docker run $DOCKER_OPTIONS $DOCKER_IMAGE

      # https://github.com/actions/upload-artifact
      - name: Retain Artifacts (*.rpm)
        if: ${{ contains(INPUTS.IMAGE, 'builder') }}
        uses: 'actions/upload-artifact@v4'
        id: retain-rpm-packages
        with:
          path: ${{ GITHUB.WORKSPACE }}/.rpms
          name: android-cuttlefish-rhel9-${{ RUNNER.ARCH }}
          retention-days: 14

      # https://github.com/actions/cache
      - name: Save build cache
        if: ${{ contains(INPUTS.IMAGE, 'builder') }}
        id: build-cache-save
        uses: 'actions/cache/save@v4'
        with:
          key: ${{ steps.build-cache-restore.outputs.cache-primary-key }}
          path: ${{ GITHUB.WORKSPACE }}/.cache

      # https://docs.docker.com/reference/cli/docker/container/run/
      - name: Build integration image
        if: ${{ contains(INPUTS.IMAGE, 'integration') }}
        id: build-integration-image
        shell: bash
        run: |
          docker run $DOCKER_OPTIONS $DOCKER_IMAGE

      # https://docs.docker.com/reference/cli/docker/container/run/
      - name: Build orchestration image
        if: ${{ contains(INPUTS.DOCKER-IMAGE, 'orchestration') }}
        id: build-orchestration-image
        shell: bash
        run: |
          docker run $DOCKER_OPTIONS $DOCKER_IMAGE
