name: Artifacts
on:
  pull_request:
    paths:
      - '.github/workflows/artifacts.yaml'
      - 'tools/buildimage/**'
      - 'docker/**'
  push:
    branches:
      - main
jobs:
  export-debs:
    runs-on: ubuntu-22.04
    container:
      image: debian@sha256:823849b88ae7e9b6ceb605fbdf51566499c234a9cfca8da1e4f22234fd65a09c # debian:bullseye-20250317 (amd64)
    steps:
    - name: apt update
      run: apt update -y && apt upgrade -y
    - name: install sudo
      run: apt install -y sudo
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build debs
      run: |
        bash tools/buildutils/build_packages.sh
        ls -la *.deb
    - name: Build debs.tar
      run: find . -name 'cuttlefish-*.deb' -print0 | tar -cvf debs.tar --null --files-from -
    - name: Publish debs.tar
      uses: actions/upload-artifact@v4
      with:
        name: debs
        path: debs.tar
  export-docker-image-x86_64:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Get docker image name
      run: |
        short_sha=$(echo ${{ github.sha }} | cut -c1-8)
        echo "x86_64_image_path=orchestration-image-x86_64-${short_sha}.tar" >> $GITHUB_ENV
        echo "image_name=cuttlefish-orchestration:${short_sha}" >> $GITHUB_ENV
    - name: Build docker image
      run: docker/image-builder.sh -t ${{ env.image_name }}
    - name: Save docker image
      run: docker save --output ${{ env.x86_64_image_path }} ${{ env.image_name }}
    - name: Publish docker image
      uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # aka v4.0.0
      with:
        name: docker-image-x86_64
        path: ${{ env.x86_64_image_path }}
  export-docker-image-arm64:
    runs-on: arm-ubuntu-arm-22.04-4core
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Get docker image name
      run: |
        short_sha=$(echo ${{ github.sha }} | cut -c1-8)
        echo "arm64_image_path=orchestration-image-arm64-${short_sha}.tar" >> $GITHUB_ENV
        echo "image_name=cuttlefish-orchestration:${short_sha}" >> $GITHUB_ENV
    - name: Build docker image
      run: docker/image-builder.sh -t ${{ env.image_name }}
    - name: Save docker image
      run: docker save --output ${{ env.arm64_image_path }} ${{ env.image_name }}
    - name: Publish docker image
      uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # aka v4.0.0
      with:
        name: docker-image-arm64
        path: ${{ env.arm64_image_path }}
