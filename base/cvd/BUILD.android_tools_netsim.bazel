load("@netsim_crates//:defs.bzl", "all_crate_deps")
load("@protobuf//bazel:cc_proto_library.bzl", "cc_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library")

rust_library(
    name = "libnetsim_proto",
    srcs = glob(["rust/proto/src/**/*.rs"]),
    crate_name = "netsim_proto",
    visibility = ["//visibility:public"],
    deps = all_crate_deps(
        package_name = "proto",
        normal = True,
    ),
)

rust_library(
    name = "libnetsim_common",
    srcs = glob(["rust/common/src/**/*.rs"]),
    crate_name = "netsim_common",
    visibility = ["//visibility:public"],
    deps = all_crate_deps(
        package_name = "common",
        normal = True,
    ),
)

rust_library(
    name = "libnetsim_cli",
    srcs = glob(["rust/cli/src/*.rs"]),
    crate_name = "netsim_cli",
    visibility = ["//visibility:public"],
    deps = all_crate_deps(
        package_name = "cli",
        normal = True,
    ) + [
        ":libnetsim_common",
        ":libnetsim_proto",
    ],
)

rust_binary(
    name = "netsim",
    srcs = ["rust/cli/bin/netsim.rs"],
    visibility = ["//visibility:public"],
    deps = all_crate_deps(
        package_name = "cli",
        normal = True,
    ) + [
        ":libnetsim_cli",
    ],
)

proto_library(
    name = "netsim_proto",
    srcs = [
        "proto/netsim/common.proto",
        "proto/netsim/config.proto",
        "proto/netsim/frontend.proto",
        "proto/netsim/hci_packet.proto",
        "proto/netsim/model.proto",
        "proto/netsim/packet_streamer.proto",
        "proto/netsim/startup.proto",
        "proto/netsim/stats.proto",
    ],
    strip_import_prefix = "proto",
    deps = [
        "@protobuf//:empty_proto",
        "@protobuf//:timestamp_proto",
        "@rootcanal//:rootcanal_proto",
    ],
)

# lib-netsimd-proto
cc_proto_library(
    name = "netsim_proto_cc",
    deps = [":netsim_proto"],
)
