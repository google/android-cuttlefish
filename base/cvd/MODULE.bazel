###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

bazel_dep(name = "abseil-cpp", version = "20250127.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")
bazel_dep(name = "aspect_rules_lint", version = "1.0.8", dev_dependency = True)
bazel_dep(name = "bazel_skylib", version = "1.7.1", dev_dependency = True)
bazel_dep(name = "boringssl", version = "0.20241024.0")
bazel_dep(name = "curl", version = "8.8.0.bcr.2")
bazel_dep(name = "fmt", version = "10.2.1")
bazel_dep(name = "freetype", version = "2.13.3")
bazel_dep(name = "gflags", version = "2.2.2")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33.bcr.1")
bazel_dep(name = "googleapis-cc", version = "1.0.0")
bazel_dep(name = "googletest", version = "1.15.2")
bazel_dep(name = "grpc", version = "1.71.0")
bazel_dep(name = "grpc-proto", version = "0.0.0-20240627-ec30f58")
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
bazel_dep(name = "jsoncpp", version = "1.9.5")
bazel_dep(name = "libxml2", version = "2.13.5")
bazel_dep(name = "libzip", version = "1.10.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "protobuf", version = "29.1")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_proto_grpc_cpp", version = "5.0.1")
bazel_dep(name = "rules_python", version = "0.40.0")
bazel_dep(name = "tinyxml2", version = "10.0.0")
bazel_dep(name = "toolchains_llvm", version = "1.2.0")
bazel_dep(name = "zlib", version = "1.3.1.bcr.3")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
git_override(
    module_name = "hedron_compile_commands",
    # While waiting for
    # https://github.com/hedronvision/bazel-compile-commands-extractor/pull/219
    # to be merged.
    commit = "f5fbd4cee671d8d908f37c83abaf70fba5928fc7",
    remote = "https://github.com/mikael-s-persson/bazel-compile-commands-extractor",
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
   llvm_version = "18.1.8",
)

use_repo(llvm, "llvm_toolchain")

file_detector = use_repo_rule("//toolchain:file_detector.bzl", "file_detector")

file_detector(
    name = "clang_detector",
    files = {
        "/usr/bin/clang-11": "clang_11",
        "/usr/bin/clang-12": "clang_12",
        "/usr/bin/clang-13": "clang_13",
        "/usr/bin/clang-14": "clang_14",
        "/usr/bin/clang-15": "clang_15",
        "/usr/bin/clang-16": "clang_16",
        "/usr/bin/clang-17": "clang_17",
        "/usr/bin/clang-18": "clang_18",
        "/usr/bin/clang-19": "clang_19",
    },
)

# The first toolchain that satisfies platform constraints is chosen.
# Alternatively, a specific toolchain can be chosen with the
# `--extra_toolchains` flag, e.g.
# ```
# bazel build //cuttlefish/package:cvd \
#   --extra_toolchains=//toolchain:linux_local_clang_19
# ```
#
# For more information, see https://bazel.build/extending/toolchains
register_toolchains(
    "@llvm_toolchain//:all",  # TODO: b/407854179 - demote after testing others
    "//toolchain:linux_local_clang_19",
    "//toolchain:linux_local_clang_18",
    "//toolchain:linux_local_clang_17",
    "//toolchain:linux_local_clang_16",
    "//toolchain:linux_local_clang_15",
    "//toolchain:linux_local_clang_14",
    "//toolchain:linux_local_clang_13",
    "//toolchain:linux_local_clang_12",
    "//toolchain:linux_local_clang_11",
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    # Required to avoid an error when running as root e.g. in Docker builds.
    ignore_root_user_error = True,
    python_version = "3.12",
)

git_override(
    module_name = "aspect_rules_lint",
    # While waiting for https://github.com/aspect-build/rules_lint/pull/472 to
    # be merged.
    commit = "62e8aa0e9935bb7db76ead9cc2c1804e4dd740b9",
    remote = "https://github.com/Databean/rules_lint.git",
)

git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
git_repository(
    name = "fruit",
    build_file = "@//:BUILD.fruit.bazel",
    commit = "0af6ffd113ad963dbd2a23e8cbabba13493c015f", # 2025-02-02
    remote = "https://github.com/google/fruit.git",
)

git_repository(
    name = "egl_headers",
    build_file = "@//:BUILD.egl_headers.bazel",
    commit = "29c4314e0ef04c730992d295f91b76635019fbba",
    remote = "https://github.com/KhronosGroup/EGL-Registry.git",
)

git_repository(
    name = "opengl_headers",
    build_file = "@//:BUILD.opengl_headers.bazel",
    commit = "b53ca669bea4715b6d5fa53c459f47a1fecd7944",
    remote = "https://github.com/KhronosGroup/OpenGL-Registry.git",
)

git_repository(
    name = "vulkan_headers",
    build_file = "@//:BUILD.vulkan_headers.bazel",
    commit = "952f776f6573aafbb62ea717d871cd1d6816c387", # v1.4.309
    remote = "https://github.com/KhronosGroup/Vulkan-Headers.git",
)

git_repository(
    name = "libyuv",
    build_file = "@//:BUILD.libyuv.bazel",
    commit = "af6ac8265bbd07bcf977526458b60305c4304288",
    remote = "https://chromium.googlesource.com/libyuv/libyuv.git",
)

git_repository(
    name = "libffi",
    build_file = "@//:BUILD.libffi.bazel",
    commit = "5dcb741f1544c5e18c9dbf96aeb8b61cc556a616", # v3.3
    remote = "https://github.com/libffi/libffi.git",
)

git_repository(
    name = "spirv_headers",
    commit = "4f7b471f1a66b6d06462cd4ba57628cc0cd087d7",
    remote = "https://github.com/KhronosGroup/SPIRV-Headers.git",
)

git_repository(
    name = "spirv_tools",
    commit = "dd4b663e13c07fea4fbb3f70c1c91c86731099f7", # v2024.2
    remote = "https://github.com/KhronosGroup/SPIRV-Tools.git",
)

git_repository(
    name = "swiftshader",
    build_file = "@//:BUILD.swiftshader.bazel",
    commit = "4c3426403b9c89253322265323ca658a2476faca",
    remote = "https://swiftshader.googlesource.com/SwiftShader.git",
)

git_repository(
    name = "libdrm",
    build_file = "@//:BUILD.libdrm.bazel",
    commit = "998d2a2e81e11043781672494dc3d294c1ecfce0",
    remote = "https://gitlab.freedesktop.org/mesa/drm.git",
)

git_repository(
    name = "crosvm",
    build_file = "@//:BUILD.crosvm.bazel",
    commit = "dee7838993bae90cad49d5595b958cfe4c28b58d",
    remote = "https://chromium.googlesource.com/crosvm/crosvm",
)

git_repository(
    name = "expat",
    build_file = "@//:BUILD.expat.bazel",
    commit = "2691aff4304a6d7e053199c205620136481b9dd1", # 2.6.4
    remote = "https://github.com/libexpat/libexpat/",
)

git_repository(
    name = "wayland",
    build_file = "@//build_external/wayland:BUILD.wayland.bazel",
    commit = "b2649cb3ee6bd70828a17e50beb16591e6066288", # 1.22.0
    remote = "https://gitlab.freedesktop.org/wayland/wayland.git",
    patch_strip = 1,
    patches = [
        "@//build_external/wayland:PATCH.wayland.wayland_config.patch",
    ],
)

git_repository(
    name = "libwebsockets",
    build_file = "@//:BUILD.libwebsockets.bazel",
    commit = "9075f01e1670e64435f4ea501667982fc911ad6b", # v4.3-stable
    remote = "https://libwebsockets.org/repo/libwebsockets",
)

git_repository(
    name = "libcbor",
    commit = "ae000f44e8d2a69e1f72a738f7c0b6b4b7cc4fbf", # v0.12.0
    build_file = "@//:BUILD.libcbor.bazel",
    remote = "https://github.com/PJK/libcbor",
)

git_repository(
    name = "libwebm",
    commit = "6745fd29e0245fc584b0bb9f65018ea2366fe7fb", # libwebm-1.0.0.31
    build_file = "@//:BUILD.libwebm.bazel",
    remote = "https://github.com/webmproject/libwebm",
)
