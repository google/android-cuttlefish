load("//cuttlefish/bazel:rules.bzl", "cf_cc_library")

package(
    default_visibility = ["//:android_cuttlefish"],
)

cf_cc_library(
    name = "audio_frame_buffer",
    hdrs = ["audio_frame_buffer.h"],
)

cf_cc_library(
    name = "audio_track_source_impl",
    srcs = ["audio_track_source_impl.cpp"],
    hdrs = ["audio_track_source_impl.h"],
    deps = [
        "//cuttlefish/host/frontend/webrtc/libdevice:audio_sink",
        "//libbase",
        "@libwebrtc",
    ],
)

cf_cc_library(
    name = "audio_sink",
    hdrs = ["audio_sink.h"],
    deps = [
        "//cuttlefish/host/frontend/webrtc/libdevice:audio_frame_buffer",
    ],
)

cf_cc_library(
    name = "camera_controller",
    hdrs = ["camera_controller.h"],
    deps = [
        "@jsoncpp",
    ],
)

cf_cc_library(
    name = "libdevice",
    srcs = [
        "camera_streamer.cpp",
        "client_handler.cpp",
        "data_channels.cpp",
        "gamepad.cpp",
        "keyboard.cpp",
        "lights_observer.cpp",
        "local_recorder.cpp",
        "recording_manager.cpp",
        "server_connection.cpp",
        "streamer.cpp",
        "video_track_source_impl.cpp",
    ],
    hdrs = [
        "camera_streamer.h",
        "client_handler.h",
        "connection_observer.h",
        "data_channels.h",
        "gamepad.h",
        "keyboard.h",
        "lights_observer.h",
        "local_recorder.h",
        "recording_manager.h",
        "server_connection.h",
        "streamer.h",
        "video_sink.h",
        "video_track_source_impl.h",
    ],
    linkopts = [
        "-lopus",
    ],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils:json",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:vsock_connection",
        "//cuttlefish/host/frontend/webrtc/libcommon:audio_device",
        "//cuttlefish/host/frontend/webrtc/libcommon:audio_source",
        "//cuttlefish/host/frontend/webrtc/libcommon:connection_controller",
        "//cuttlefish/host/frontend/webrtc/libcommon:peer_connection_utils",
        "//cuttlefish/host/frontend/webrtc/libcommon:utils",
        "//cuttlefish/host/frontend/webrtc/libdevice:audio_sink",
        "//cuttlefish/host/frontend/webrtc/libdevice:audio_track_source_impl",
        "//cuttlefish/host/frontend/webrtc/libdevice:camera_controller",
        "//cuttlefish/host/frontend/webrtc_operator/constants:webrtc_signaling_headers",
        "//cuttlefish/host/libs/config:custom_actions",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/screen_connector:video_frame_buffer",
        "//libbase",
        "@boringssl//:crypto",
        "@jsoncpp",
        "@libvpx",
        "@libwebm//:mkvmuxer",
        "@libwebrtc",
    ],
)
