load("//:build_variables.bzl", "COPTS")
load("//tools/lint:linters.bzl", "clang_tidy_test")

package(
    default_visibility = ["//:android_cuttlefish"],
)

cc_library(
    name = "reporting",
    srcs = ["reporting.cpp"],
    hdrs = ["reporting.h"],
    deps = [
        "//libbase",
        "@fruit"
    ],
)

clang_tidy_test(
    name = "reporting_clang_tidy",
    srcs = [":reporting"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_binary(
    name = "run_cvd",
    srcs = [
        "boot_state_machine.cc",
        "boot_state_machine.h",
        "main.cc",
        "reporting.cpp",
        "reporting.h",
        "server_loop.cpp",
        "server_loop.h",
        "server_loop_impl.cpp",
        "server_loop_impl.h",
        "server_loop_impl_snapshot.cpp",
        "server_loop_impl_webrtc.cpp",
        "validate.cpp",
        "validate.h",
    ],
    copts = COPTS,
    deps = [
        ":reporting",
        "//:libbuildversion",
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/commands/assemble_cvd:libassemble_cvd",
        "//cuttlefish/host/commands/kernel_log_monitor:kernel_log_monitor_utils",
        "//cuttlefish/host/commands/openwrt_control_server:libopenwrt_control_server",
        "//cuttlefish/host/commands/run_cvd/launch",
        "//cuttlefish/host/commands/run_cvd/launch:auto_cmd",
        "//cuttlefish/host/libs/command_util",
        "//cuttlefish/host/libs/command_util:libcuttlefish_run_cvd_proto",
        "//cuttlefish/host/libs/config",
        "//cuttlefish/host/libs/config/adb",
        "//cuttlefish/host/libs/config/fastboot",
        "//cuttlefish/host/libs/metrics",
        "//cuttlefish/host/libs/process_monitor",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
        "@fruit",
        "@gflags",
        "@grpc//:grpc",
        "@grpc//:grpc++",
    ],
)

clang_tidy_test(
    name = "run_cvd_clang_tidy",
    srcs = [":run_cvd"],
    tags = ["clang_tidy", "clang-tidy"],
)
