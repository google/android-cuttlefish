load("//:build_variables.bzl", "COPTS")
load("//tools/lint:linters.bzl", "clang_tidy_test")

package(
    default_visibility = ["//:android_cuttlefish"],
)

cc_binary(
    name = "run_cvd",
    srcs = [
        "main.cc",
    ],
    copts = COPTS,
    deps = [
        ":librun_cvd",
        "//:libbuildversion",
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/libs/command_util",
        "//cuttlefish/host/libs/config",
        "//cuttlefish/host/libs/config/adb",
        "//cuttlefish/host/libs/config/fastboot",
        "//cuttlefish/host/libs/metrics",
        "//cuttlefish/host/libs/process_monitor",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
        "@fruit",
        "@gflags",
    ],
)

clang_tidy_test(
    name = "run_cvd_clang_tidy",
    srcs = [":run_cvd"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_library(
    name = "librun_cvd",
    srcs = [
        "boot_state_machine.cc",
        "launch/automotive_proxy.cpp",
        "launch/bluetooth_connector.cpp",
        "launch/casimir_control_server.cpp",
        "launch/casimir.cpp",
        "launch/console_forwarder.cpp",
        "launch/control_env_proxy_server.cpp",
        "launch/echo_server.cpp",
        "launch/gnss_grpc_proxy.cpp",
        "launch/grpc_socket_creator.cpp",
        "launch/kernel_log_monitor.cpp",
        "launch/logcat_receiver.cpp",
        "launch/log_tee_creator.cpp",
        "launch/mcu.cpp",
        "launch/metrics.cpp",
        "launch/modem.cpp",
        "launch/netsim_server.cpp",
        "launch/nfc_connector.cpp",
        "launch/openwrt_control_server.cpp",
        "launch/open_wrt.cpp",
        "launch/pica.cpp",
        "launch/root_canal.cpp",
        "launch/screen_recording_server.cpp",
        "launch/secure_env.cpp",
        "launch/sensors_simulator.cpp",
        "launch/sensors_socket_pair.cpp",
        "launch/snapshot_control_files.cpp",
        "launch/streamer.cpp",
        "launch/ti50_emulator.cpp",
        "launch/tombstone_receiver.cpp",
        "launch/uwb_connector.cpp",
        "launch/vhal_proxy_server.cpp",
        "launch/vhost_device_vsock.cpp",
        "launch/vhost_input_devices.cpp",
        "launch/webrtc_controller.cpp",
        "launch/wmediumd_server.cpp",
        "reporting.cpp",
        "server_loop.cpp",
        "server_loop_impl.cpp",
        "server_loop_impl_snapshot.cpp",
        "server_loop_impl_webrtc.cpp",
        "validate.cpp",
    ],
    hdrs = [
        "boot_state_machine.h",
        "launch/auto_cmd.h",
        "launch/grpc_socket_creator.h",
        "launch/input_connections_provider.h",
        "launch/launch.h",
        "launch/log_tee_creator.h",
        "launch/sensors_socket_pair.h",
        "launch/snapshot_control_files.h",
        "launch/vhost_device_vsock.h",
        "launch/webrtc_controller.h",
        "launch/wmediumd_server.h",
        "reporting.h",
        "server_loop.h",
        "server_loop_impl.h",
        "validate.h",
    ],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/transport",
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/commands/kernel_log_monitor:kernel_log_monitor_utils",
        "//cuttlefish/host/commands/assemble_cvd:libassemble_cvd",
        "//cuttlefish/host/commands/openwrt_control_server:libopenwrt_control_server",
        "//cuttlefish/host/frontend/webrtc:libcuttlefish_webrtc_commands_proto",
        "//cuttlefish/host/frontend/webrtc:libcuttlefish_webrtc_command_channel",
        "//cuttlefish/host/libs/command_util",
        "//cuttlefish/host/libs/command_util:libcuttlefish_run_cvd_proto",
        "//cuttlefish/host/libs/config",
        "//cuttlefish/host/libs/process_monitor",
        "//cuttlefish/host/libs/vhal_proxy_server",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
        "@fmt",
        "@fruit",
        "@gflags",
        "@googleapis//google/rpc:code_cc_proto",
        "@grpc//:grpc",
        "@grpc//:grpc++",
        "@jsoncpp",
    ],
)

clang_tidy_test(
    name = "librun_cvd_clang_tidy",
    srcs = [":librun_cvd"],
    tags = ["clang_tidy", "clang-tidy"],
)
