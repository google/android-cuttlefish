proto_library(
    name = "cvd_server_proto",
    srcs = ["cvd_server.proto"],
)

cc_proto_library(
    name = "cvd_server_cc_proto",
    deps = [":cvd_server_proto"],
)

proto_library(
    name = "user_config_proto",
    srcs = ["acloud/user_config.proto"],
)

cc_proto_library(
    name = "user_config_cc_proto",
    deps = [":user_config_proto"],
)

proto_library(
    name = "launch_cvd_proto",
    srcs = ["parser/instance/launch_cvd.proto"],
)

cc_proto_library(
    name = "launch_cvd_cc_proto",
    deps = [":launch_cvd_proto"],
)

proto_library(
    name = "cvd_persistent_data_proto",
    srcs = ["selector/cvd_persistent_data.proto"],
)

cc_proto_library(
    name = "cvd_persistent_data",
    deps = [":cvd_persistent_data_proto"],
)

proto_library(
    name = "load_config_proto",
    srcs = ["parser/load_config.proto"],
)

cc_proto_library(
    name = "load_config_cc_proto",
    deps = [":load_config_proto"],
)

cc_library(
    name = "libcvd",
    srcs = [
        "//:build_version_header",
        "acloud/config.cpp",
        "acloud/config.h",
        "acloud/converter.cpp",
        "acloud/converter.h",
        "acloud/create_converter_parser.cpp",
        "acloud/create_converter_parser.h",
        "client.cpp",
        "client.h",
        "command_sequence.cpp",
        "command_sequence.h",
        "common_utils.cpp",
        "common_utils.h",
        "cvd.cpp",
        "driver_flags.cpp",
        "driver_flags.h",
        "epoll_loop.cpp",
        "epoll_loop.h",
        "fetch/fetch_cvd.cc",
        "fetch/fetch_cvd.h",
        "fetch/fetch_cvd_parser.cc",
        "fetch/fetch_cvd_parser.h",
        "fetch/fetch_tracer.h",
        "fetch/fetch_tracer.cpp",
        "flag.cpp",
        "flag.h",
        "frontline_parser.cpp",
        "frontline_parser.h",
        "group_selector.cpp",
        "group_selector.h",
        "instance_lock.cpp",
        "instance_lock.h",
        "instance_manager.cpp",
        "instance_manager.h",
        "interrupt_listener.cpp",
        "interruptible_terminal.cpp",
        "interruptible_terminal.h",
        "lock_file.cpp",
        "lock_file.h",
        "logger.cpp",
        "logger.h",
        # TODO: b/315772518 - cvd metrics are currently disabled
        #"metrics/cvd_metrics_api.cpp",
        #"metrics/cvd_metrics_api.h",
        "metrics/metrics_notice.cpp",
        "metrics/metrics_notice.h",
        #"metrics/utils.cpp",
        #"metrics/utils.h",
        "operator_client.cpp",
        "operator_client.h",
        "parser/cf_configs_common.cpp",
        "parser/cf_configs_common.h",
        "parser/cf_configs_instances.cpp",
        "parser/cf_configs_instances.h",
        "parser/cf_flags_validator.cpp",
        "parser/cf_flags_validator.h",
        "parser/cf_metrics_configs.cpp",
        "parser/cf_metrics_configs.h",
        "parser/fetch_config_parser.cpp",
        "parser/fetch_config_parser.h",
        "parser/instance/cf_boot_configs.cpp",
        "parser/instance/cf_connectivity_configs.cpp",
        "parser/instance/cf_connectivity_configs.h",
        "parser/instance/cf_disk_configs.cpp",
        "parser/instance/cf_disk_configs.h",
        "parser/instance/cf_graphics_configs.cpp",
        "parser/instance/cf_graphics_configs.h",
        "parser/instance/cf_security_configs.cpp",
        "parser/instance/cf_security_configs.h",
        "parser/instance/cf_streaming_configs.cpp",
        "parser/instance/cf_streaming_configs.h",
        "parser/instance/cf_vm_configs.cpp",
        "parser/instance/cf_vm_configs.h",
        "parser/launch_cvd_parser.cpp",
        "parser/launch_cvd_parser.h",
        "parser/launch_cvd_templates.cpp",
        "parser/launch_cvd_templates.h",
        "parser/load_configs_parser.cpp",
        "parser/load_configs_parser.h",
        "parser/selector_parser.cpp",
        "parser/selector_parser.h",
        "request_context.cpp",
        "request_context.h",
        "reset_client_utils.cpp",
        "reset_client_utils.h",
        "run_cvd_proc_collector.cpp",
        "run_cvd_proc_collector.h",
        "run_server.cpp",
        "run_server.h",
        "selector/arguments_lexer.cpp",
        "selector/arguments_lexer.h",
        "selector/arguments_separator.cpp",
        "selector/arguments_separator.h",
        "selector/constant_reference.h",
        "selector/creation_analyzer.cpp",
        "selector/creation_analyzer.h",
        "selector/device_selector_utils.cpp",
        "selector/device_selector_utils.h",
        "selector/group_selector.cpp",
        "selector/group_selector.h",
        "selector/instance_database.cpp",
        "selector/instance_database.h",
        "selector/instance_database_types.cpp",
        "selector/instance_database_types.h",
        "selector/instance_database_utils.cpp",
        "selector/instance_database_utils.h",
        "selector/instance_group_record.cpp",
        "selector/instance_group_record.h",
        "selector/instance_selector.cpp",
        "selector/instance_selector.h",
        "selector/selector_common_parser.cpp",
        "selector/selector_common_parser.h",
        "selector/selector_constants.cpp",
        "selector/selector_constants.h",
        "selector/selector_option_parser_utils.h",
        "selector/start_selector_parser.cpp",
        "selector/start_selector_parser.h",
        "command_request.cpp",
        "command_request.h",
        "server_command/acloud_command.cpp",
        "server_command/acloud_command.h",
        "server_command/acloud_common.cpp",
        "server_command/acloud_common.h",
        "server_command/acloud_mixsuperimage.cpp",
        "server_command/acloud_mixsuperimage.h",
        "server_command/acloud_translator.cpp",
        "server_command/acloud_translator.h",
        "server_command/bugreport.cpp",
        "server_command/bugreport.h",
        "server_command/clear.cpp",
        "server_command/clear.h",
        "server_command/cmd_list.cpp",
        "server_command/cmd_list.h",
        "server_command/create.cpp",
        "server_command/create.h",
        "server_command/display.cpp",
        "server_command/display.h",
        "server_command/env.cpp",
        "server_command/env.h",
        "server_command/fetch.cpp",
        "server_command/fetch.h",
        "server_command/flags_collector.cpp",
        "server_command/flags_collector.h",
        "server_command/fleet.cpp",
        "server_command/fleet.h",
        "server_command/help.cpp",
        "server_command/help.h",
        "server_command/host_tool_target.cpp",
        "server_command/host_tool_target.h",
        "server_command/host_tool_target_manager.cpp",
        "server_command/host_tool_target_manager.h",
        "server_command/lint.cpp",
        "server_command/lint.h",
        "server_command/load_configs.cpp",
        "server_command/load_configs.h",
        "server_command/noop.cpp",
        "server_command/noop.h",
        "server_command/power.cpp",
        "server_command/power.h",
        "server_command/remove.cpp",
        "server_command/remove.h",
        "server_command/reset.cpp",
        "server_command/reset.h",
        "server_command/server_handler.h",
        "server_command/snapshot.cpp",
        "server_command/snapshot.h",
        "server_command/start.cpp",
        "server_command/start.h",
        "server_command/start_impl.h",
        "server_command/status.cpp",
        "server_command/status.h",
        "server_command/status_fetcher.cpp",
        "server_command/status_fetcher.h",
        "server_command/stop.cpp",
        "server_command/stop.h",
        "server_command/subprocess_waiter.cpp",
        "server_command/subprocess_waiter.h",
        "server_command/try_acloud.cpp",
        "server_command/try_acloud.h",
        "server_command/utils.cpp",
        "server_command/utils.h",
        "server_command/version.cpp",
        "server_command/version.h",
        "server_constants.cpp",
        "server_constants.h",
        "types.h",
        "selector/data_viewer.cpp",
    ],
    hdrs = [
        "acloud/config.h",
        "acloud/converter.h",
        "acloud/create_converter_parser.h",
        "client.h",
        "command_sequence.h",
        "common_utils.h",
        "cvd.h",
        "driver_flags.h",
        "epoll_loop.h",
        "fetch/fetch_cvd.h",
        "fetch/fetch_cvd_parser.h",
        "fetch/fetch_tracer.h",
        "flag.h",
        "frontline_parser.h",
        "group_selector.h",
        "instance_lock.h",
        "instance_manager.h",
        "interrupt_listener.h",
        "interruptible_terminal.h",
        "lock_file.h",
        "logger.h",
        "metrics/metrics_notice.h",
        "operator_client.h",
        "parser/cf_configs_common.h",
        "parser/cf_configs_instances.h",
        "parser/cf_flags_validator.h",
        "parser/cf_metrics_configs.h",
        "parser/fetch_config_parser.h",
        "parser/instance/cf_boot_configs.h",
        "parser/instance/cf_connectivity_configs.h",
        "parser/instance/cf_disk_configs.h",
        "parser/instance/cf_graphics_configs.h",
        "parser/instance/cf_security_configs.h",
        "parser/instance/cf_streaming_configs.h",
        "parser/instance/cf_vm_configs.h",
        "parser/launch_cvd_parser.h",
        "parser/launch_cvd_templates.h",
        "parser/load_configs_parser.h",
        "parser/selector_parser.h",
        "request_context.h",
        "reset_client_utils.h",
        "run_cvd_proc_collector.h",
        "run_server.h",
        "selector/arguments_lexer.h",
        "selector/arguments_separator.h",
        "selector/constant_reference.h",
        "selector/creation_analyzer.h",
        "selector/data_viewer.h",
        "selector/device_selector_utils.h",
        "selector/group_selector.h",
        "selector/instance_database.h",
        "selector/instance_database_types.h",
        "selector/instance_database_utils.h",
        "selector/instance_group_record.h",
        "selector/instance_selector.h",
        "selector/selector_common_parser.h",
        "selector/selector_constants.h",
        "selector/selector_option_parser_utils.h",
        "selector/start_selector_parser.h",
        "command_request.h",
        "server_command/acloud_command.h",
        "server_command/acloud_common.h",
        "server_command/acloud_mixsuperimage.h",
        "server_command/acloud_translator.h",
        "server_command/bugreport.h",
        "server_command/clear.h",
        "server_command/cmd_list.h",
        "server_command/create.h",
        "server_command/display.h",
        "server_command/env.h",
        "server_command/fetch.h",
        "server_command/flags_collector.h",
        "server_command/fleet.h",
        "server_command/help.h",
        "server_command/host_tool_target.h",
        "server_command/host_tool_target_manager.h",
        "server_command/lint.h",
        "server_command/load_configs.h",
        "server_command/noop.h",
        "server_command/power.h",
        "server_command/remove.h",
        "server_command/reset.h",
        "server_command/server_handler.h",
        "server_command/snapshot.h",
        "server_command/start.h",
        "server_command/start_impl.h",
        "server_command/status.h",
        "server_command/status_fetcher.h",
        "server_command/stop.h",
        "server_command/subprocess_waiter.h",
        "server_command/try_acloud.h",
        "server_command/utils.h",
        "server_command/version.h",
        "server_constants.h",
        "types.h",
    ],
    copts = [
        "-Werror=sign-compare",
        "-Wno-ctad-maybe-unsupported",
        "-std=c++17",
        "-lcurl",
    ],
    strip_include_prefix = "//cuttlefish",
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/commands/assemble_cvd:libassemble_cvd",
        "//cuttlefish/host/commands/metrics:libmetrics",
        "//cuttlefish/host/libs/config",
        "//cuttlefish/host/libs/image_aggregator",
        "//cuttlefish/host/libs/web",
        "//libbase",
        "//libsparse",
        ":cvd_persistent_data",
        ":cvd_server_cc_proto",
        ":launch_cvd_cc_proto",
        ":load_config_cc_proto",
        ":user_config_cc_proto",
        "@boringssl//:crypto",
        "@fmt",
        "@gflags",
        "@jsoncpp",
        "@tinyxml2",
        "@zlib",
    ],
)

cc_binary(
    name = "cvd",
    srcs = [
        "main.cc",
    ],
    copts = [
        "-Wno-ctad-maybe-unsupported",
        "-std=c++17",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":libcvd",
        "//cuttlefish/common/libs/utils",
        "//libbase",
        "//libsparse",
        "@fmt",
    ],
)

cc_test(
    name = "cvd_test",
    srcs = [
        "unittests/parser/configs_inheritance_test.cc",
        "unittests/parser/flags_parser_test.cc",
        "unittests/parser/instance/boot_configs_test.cc",
        "unittests/parser/instance/disk_configs_test.cc",
        "unittests/parser/instance/graphics_configs_test.cc",
        "unittests/parser/instance/vm_configs_test.cc",
        "unittests/parser/metrics_configs_test.cc",
        "unittests/parser/test_common.h",
        "unittests/parser/test_common.cc",
        "unittests/selector/client_lexer_helper.h",
        "unittests/selector/client_lexer_helper.cpp",
        "unittests/selector/client_lexer_test.cpp",
        "unittests/selector/cvd_flags_helper.h",
        "unittests/selector/cvd_flags_helper.cpp",
        "unittests/selector/cvd_flags_test.cpp",
        "unittests/selector/group_record_test.cpp",
        "unittests/selector/host_tool_target_test.cpp",
        "unittests/selector/instance_database_helper.h",
        "unittests/selector/instance_database_helper.cpp",
        "unittests/selector/instance_database_test.cpp",
        "unittests/selector/instance_record_test.cpp",
        "unittests/selector/parser_ids_helper.h",
        "unittests/selector/parser_ids_helper.cpp",
        "unittests/selector/parser_ids_test.cpp",
        "unittests/selector/parser_names_helper.h",
        "unittests/selector/parser_names_helper.cpp",
        "unittests/selector/parser_names_test.cpp",
        "unittests/server/frontline_parser_test.cpp",
        "unittests/server/utils.h",
    ],
    copts = [
        "-Wno-ctad-maybe-unsupported",
        "-std=c++17",
        "-Icuttlefish",
    ],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:result_matchers",
        "//cuttlefish/host/libs/config",
        "//libbase",
        ":cvd_persistent_data",
        ":launch_cvd_cc_proto",
        ":libcvd",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
        "@jsoncpp",
    ],
)
