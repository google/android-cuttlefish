load("//cuttlefish/bazel:rules.bzl", "COPTS", "cf_cc_binary", "cf_cc_library")

package(
    default_visibility = ["//:android_cuttlefish"],
)

cf_cc_library(
    name = "alloc",
    srcs = ["alloc.cc"],
    hdrs = ["alloc.h"],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/host/libs/allocd:allocd_utils",
    ],
)

cf_cc_binary(
    name = "assemble_cvd",
    srcs = ["assemble_cvd.cc"],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils:contains",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:flag_parser",
        "//cuttlefish/common/libs/utils:in_sandbox",
        "//cuttlefish/common/libs/utils:tee_logging",
        "//cuttlefish/host/commands/assemble_cvd:assemble_cvd_flags",
        "//cuttlefish/host/commands/assemble_cvd:clean",
        "//cuttlefish/host/commands/assemble_cvd:disk_flags",
        "//cuttlefish/host/commands/assemble_cvd:display",
        "//cuttlefish/host/commands/assemble_cvd:flag_feature",
        "//cuttlefish/host/commands/assemble_cvd:flags",
        "//cuttlefish/host/commands/assemble_cvd:flags_defaults",
        "//cuttlefish/host/commands/assemble_cvd:touchpad",
        "//cuttlefish/host/commands/assemble_cvd/disk:factory_reset_protected",
        "//cuttlefish/host/commands/assemble_cvd/disk:metadata_image",
        "//cuttlefish/host/commands/assemble_cvd/disk:misc_image",
        "//cuttlefish/host/commands/assemble_cvd/flags:initramfs_path",
        "//cuttlefish/host/commands/assemble_cvd/flags:kernel_path",
        "//cuttlefish/host/commands/assemble_cvd/flags:system_image_dir",
        "//cuttlefish/host/libs/command_util",
        "//cuttlefish/host/libs/config:ap_boot_flow",
        "//cuttlefish/host/libs/config:config_flag",
        "//cuttlefish/host/libs/config:custom_actions",
        "//cuttlefish/host/libs/config:fetcher_config",
        "//cuttlefish/host/libs/config/adb",
        "//cuttlefish/host/libs/config/fastboot",
        "//cuttlefish/host/libs/feature:inject",
        "//libbase",
        "@gflags",
    ],
)

cf_cc_library(
    name = "boot_config",
    srcs = ["boot_config.cc"],
    hdrs = ["boot_config.h"],
    deps = [
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:size_utils",
        "//cuttlefish/common/libs/utils:subprocess",
        "//cuttlefish/host/commands/assemble_cvd:bootconfig_args",
        "//cuttlefish/host/libs/avb",
        "//cuttlefish/host/libs/config:ap_boot_flow",
        "//cuttlefish/host/libs/config:boot_flow",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/config:kernel_args",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
        "@gflags",
    ],
)

cf_cc_library(
    name = "boot_image_utils",
    srcs = ["boot_image_utils.cc"],
    hdrs = ["boot_image_utils.h"],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:subprocess",
        "//cuttlefish/host/commands/assemble_cvd/disk:generate_persistent_bootconfig",
        "//cuttlefish/host/libs/avb",
        "//cuttlefish/host/libs/config:config_utils",
        "//cuttlefish/host/libs/config:known_paths",
        "//libbase",
    ],
)

cf_cc_library(
    name = "bootconfig_args",
    srcs = ["bootconfig_args.cpp"],
    hdrs = ["bootconfig_args.h"],
    deps = [
        "//cuttlefish/common/libs/utils:json",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/libs/config:config_constants",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
    ],
)

cf_cc_library(
    name = "clean",
    srcs = ["clean.cc"],
    hdrs = ["clean.h"],
    deps = [
        "//cuttlefish/common/libs/utils:in_sandbox",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:subprocess",
        "//cuttlefish/host/libs/config:config_utils",
        "//libbase",
    ],
)

cf_cc_library(
    name = "disk_builder",
    srcs = ["disk_builder.cpp"],
    hdrs = ["disk_builder.h"],
    deps = [
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/image_aggregator",
        "//cuttlefish/host/libs/image_aggregator:qcow2",
        "//libbase",
    ],
)

cf_cc_library(
    name = "disk_flags",
    srcs = ["disk_flags.cc"],
    hdrs = ["disk_flags.h"],
    deps = [
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/commands/assemble_cvd:assemble_cvd_flags",
        "//cuttlefish/host/commands/assemble_cvd:boot_config",
        "//cuttlefish/host/commands/assemble_cvd:boot_image_utils",
        "//cuttlefish/host/commands/assemble_cvd:disk_builder",
        "//cuttlefish/host/commands/assemble_cvd:flags_defaults",
        "//cuttlefish/host/commands/assemble_cvd:super_image_mixer",
        "//cuttlefish/host/commands/assemble_cvd/disk:access_kregistry",
        "//cuttlefish/host/commands/assemble_cvd/disk:ap_composite_disk",
        "//cuttlefish/host/commands/assemble_cvd/disk:bootloader_present",
        "//cuttlefish/host/commands/assemble_cvd/disk:chromeos_state",
        "//cuttlefish/host/commands/assemble_cvd/disk:factory_reset_protected",
        "//cuttlefish/host/commands/assemble_cvd/disk:gem5_image_unpacker",
        "//cuttlefish/host/commands/assemble_cvd/disk:generate_persistent_bootconfig",
        "//cuttlefish/host/commands/assemble_cvd/disk:generate_persistent_vbmeta",
        "//cuttlefish/host/commands/assemble_cvd/disk:hwcomposer_pmem",
        "//cuttlefish/host/commands/assemble_cvd/disk:initialize_instance_composite_disk",
        "//cuttlefish/host/commands/assemble_cvd/disk:kernel_ramdisk_repacker",
        "//cuttlefish/host/commands/assemble_cvd/disk:metadata_image",
        "//cuttlefish/host/commands/assemble_cvd/disk:misc_image",
        "//cuttlefish/host/commands/assemble_cvd/disk:os_composite_disk",
        "//cuttlefish/host/commands/assemble_cvd/disk:pflash",
        "//cuttlefish/host/commands/assemble_cvd/disk:pstore",
        "//cuttlefish/host/commands/assemble_cvd/disk:sd_card",
        "//cuttlefish/host/commands/assemble_cvd/disk:vbmeta_enforce_minimum_size",
        "//cuttlefish/host/commands/assemble_cvd/flags:initramfs_path",
        "//cuttlefish/host/commands/assemble_cvd/flags:kernel_path",
        "//cuttlefish/host/commands/assemble_cvd/flags:system_image_dir",
        "//cuttlefish/host/libs/avb",
        "//cuttlefish/host/libs/config:ap_boot_flow",
        "//cuttlefish/host/libs/config:boot_flow",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/config:data_image",
        "//cuttlefish/host/libs/config:fetcher_config",
        "//cuttlefish/host/libs/config:instance_nums",
        "//cuttlefish/host/libs/feature:inject",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
        "@gflags",
    ],
)

cf_cc_library(
    name = "display",
    srcs = ["display.cpp"],
    hdrs = ["display.h"],
    deps = [
        "//cuttlefish/common/libs/utils:flag_parser",
        "//cuttlefish/host/libs/config:config_flag",
        "//cuttlefish/host/libs/config:config_fragment",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/config:display",
        "//cuttlefish/host/libs/feature",
        "@fruit",
    ],
)

cf_cc_library(
    name = "flag_feature",
    srcs = ["flag_feature.cpp"],
    hdrs = ["flag_feature.h"],
    deps = [
        "//cuttlefish/host/libs/config:config_flag",
        "//cuttlefish/host/libs/feature",
        "//libbase",
        "@fruit",
        "@gflags",
    ],
)

cf_cc_library(
    name = "flags",
    srcs = ["flags.cc"],
    hdrs = ["flags.h"],
    deps = [
        "//cuttlefish/common/libs/utils:architecture",
        "//cuttlefish/common/libs/utils:base64",
        "//cuttlefish/common/libs/utils:container",
        "//cuttlefish/common/libs/utils:contains",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:flag_parser",
        "//cuttlefish/common/libs/utils:in_sandbox",
        "//cuttlefish/common/libs/utils:json",
        "//cuttlefish/common/libs/utils:network",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/commands/assemble_cvd:alloc",
        "//cuttlefish/host/commands/assemble_cvd:assemble_cvd_flags",
        "//cuttlefish/host/commands/assemble_cvd:boot_image_utils",
        "//cuttlefish/host/commands/assemble_cvd:disk_flags",
        "//cuttlefish/host/commands/assemble_cvd:display",
        "//cuttlefish/host/commands/assemble_cvd:flags_defaults",
        "//cuttlefish/host/commands/assemble_cvd:graphics_flags",
        "//cuttlefish/host/commands/assemble_cvd:guest_config",
        "//cuttlefish/host/commands/assemble_cvd:misc_info",
        "//cuttlefish/host/commands/assemble_cvd:network_flags",
        "//cuttlefish/host/commands/assemble_cvd:touchpad",
        "//cuttlefish/host/commands/assemble_cvd/flags:display_proto",
        "//cuttlefish/host/commands/assemble_cvd/flags:initramfs_path",
        "//cuttlefish/host/commands/assemble_cvd/flags:kernel_path",
        "//cuttlefish/host/commands/assemble_cvd/flags:system_image_dir",
        "//cuttlefish/host/libs/config:ap_boot_flow",
        "//cuttlefish/host/libs/config:config_constants",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/config:display",
        "//cuttlefish/host/libs/config:fetcher_config",
        "//cuttlefish/host/libs/config:host_tools_version",
        "//cuttlefish/host/libs/config:instance_nums",
        "//cuttlefish/host/libs/config:secure_hals",
        "//cuttlefish/host/libs/vhal_proxy_server",
        "//cuttlefish/host/libs/vm_manager",
        "//libbase",
        "@fmt",
        "@fruit",
        "@gflags",
        "@jsoncpp",
    ],
)

cf_cc_library(
    name = "flags_defaults",
    hdrs = [
        "flags_defaults.h",
    ],
    copts = COPTS + ["-Werror=sign-compare"],
    deps = [
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/host/libs/config:config_constants",
        "//cuttlefish/host/libs/config:config_utils",
    ],
)

cf_cc_library(
    name = "guest_config",
    hdrs = ["guest_config.h"],
    deps = [
        "//cuttlefish/common/libs/utils:architecture",
        "//cuttlefish/common/libs/utils:device_type",
    ],
)

cf_cc_library(
    name = "graphics_flags",
    srcs = ["graphics_flags.cc"],
    hdrs = ["graphics_flags.h"],
    deps = [
        "//cuttlefish/common/libs/utils:contains",
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:subprocess",
        "//cuttlefish/host/commands/assemble_cvd:guest_config",
        "//cuttlefish/host/graphics_detector:graphics_detector_cc_proto",
        "//cuttlefish/host/libs/config:config_constants",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//libbase",
        "@fmt",
        "@protobuf",
    ],
)

cf_cc_library(
    name = "kernel_module_parser",
    srcs = ["kernel_module_parser.cc"],
    hdrs = ["kernel_module_parser.h"],
    deps = [
        "//cuttlefish/common/libs/fs",
    ],
)

proto_library(
    name = "launch_cvd_proto",
    srcs = ["proto/launch_cvd.proto"],
)

cc_proto_library(
    name = "launch_cvd_cc_proto",
    deps = [":launch_cvd_proto"],
)

cf_cc_library(
    name = "misc_info",
    srcs = ["misc_info.cc"],
    hdrs = ["misc_info.h"],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils:contains",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/libs/avb",
        "//cuttlefish/host/libs/config:known_paths",
        "//libbase",
        "@fmt",
    ],
)

cf_cc_library(
    name = "network_flags",
    srcs = ["network_flags.cpp"],
    hdrs = ["network_flags.h"],
    deps = [
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//libbase",
    ],
)

cf_cc_library(
    name = "super_image_mixer",
    srcs = ["super_image_mixer.cc"],
    hdrs = ["super_image_mixer.h"],
    deps = [
        "//cuttlefish/common/libs/utils:archive",
        "//cuttlefish/common/libs/utils:contains",
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/common/libs/utils:subprocess",
        "//cuttlefish/host/commands/assemble_cvd:misc_info",
        "//cuttlefish/host/libs/avb",
        "//cuttlefish/host/libs/config:config_utils",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/config:fetcher_config",
        "//cuttlefish/host/libs/config:known_paths",
        "//libbase",
    ],
)

cf_cc_library(
    name = "touchpad",
    srcs = ["touchpad.cpp"],
    hdrs = ["touchpad.h"],
    deps = [
        "//cuttlefish/common/libs/utils:flag_parser",
        "//cuttlefish/host/libs/config:config_flag",
        "//cuttlefish/host/libs/config:cuttlefish_config",
        "//cuttlefish/host/libs/config:touchpad",
        "//cuttlefish/host/libs/feature",
        "@fruit",
    ],
)

cf_cc_library(
    name = "vendor_dlkm_utils",
    srcs = ["vendor_dlkm_utils.cc"],
    hdrs = ["vendor_dlkm_utils.h"],
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils:contains",
        "//cuttlefish/common/libs/utils:disk_usage",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:files",
        "//cuttlefish/common/libs/utils:subprocess",
        "//cuttlefish/host/commands/assemble_cvd:boot_image_utils",
        "//cuttlefish/host/commands/assemble_cvd:kernel_module_parser",
        "//cuttlefish/host/libs/config:config_utils",
        "//cuttlefish/host/libs/config:known_paths",
        "//libbase",
        "@fmt",
    ],
)

cf_cc_library(
    name = "assemble_cvd_flags",
    srcs = [
        "assemble_cvd_flags.cpp",
    ],
    hdrs = [
        "assemble_cvd_flags.h",
    ],
    deps = [
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/host/commands/assemble_cvd:flags_defaults",
        "//cuttlefish/host/libs/config:config_constants",
        "//cuttlefish/host/libs/config:display",
        "@fmt",
        "@gflags",
    ],
    # required for the gflags `DEFINE`s when included in other targets
    alwayslink = 1,
)
