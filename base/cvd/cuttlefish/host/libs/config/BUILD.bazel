load("//:build_variables.bzl", "COPTS")
load("//tools/lint:linters.bzl", "clang_tidy_test")

package(
    default_visibility = ["//:android_cuttlefish"],
)

cc_library(
    name = "config",
    srcs = [
        "config_flag.cpp",
        "custom_actions.cpp",
        "cuttlefish_config.cpp",
        "cuttlefish_config_instance.cpp",
        "cuttlefish_config_environment.cpp",
        "data_image.cpp",
        "display.cpp",
        "esp.cpp",
        "feature.cpp",
        "fetcher_config.cpp",
        "host_tools_version.cpp",
        "instance_nums.cpp",
        "kernel_args.cpp",
        "known_paths.cpp",
        "logging.cpp",
        "openwrt_args.cpp",
        "secure_hals.cpp",
        "touchpad.cpp",
    ],
    hdrs = [
        "command_source.h",
        "config_flag.h",
        "config_fragment.h",
        "custom_actions.h",
        "cuttlefish_config.h",
        "data_image.h",
        "display.h",
        "esp.h",
        "feature.h",
        "fetcher_config.h",
        "host_tools_version.h",
        "inject.h",
        "instance_nums.h",
        "kernel_args.h",
        "kernel_log_pipe_provider.h",
        "known_paths.h",
        "logging.h",
        "mbr.h",
        "openwrt_args.h",
        "secure_hals.h",
        "touchpad.h",
    ],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = [
        "//cuttlefish/common/libs/fs",
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/common/libs/utils:result",
        "//cuttlefish/host/commands/assemble_cvd:libassemble_cvd",
        "//cuttlefish/host/libs/config:config_constants",
        "//cuttlefish/host/libs/config:config_fragment",
        "//cuttlefish/host/libs/config:config_utils",
        "//libbase",
        "@fmt",
        "@fruit",
        "@gflags",
        "@jsoncpp",
        "@zlib",
    ],
)

clang_tidy_test(
    name = "config_clang_tidy",
    srcs = [":config"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_library(
    name = "config_constants",
    hdrs = ["config_constants.h"],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
)

clang_tidy_test(
    name = "config_constants_clang_tidy",
    srcs = [":config_constants"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_library(
    name = "config_fragment",
    hdrs = ["config_fragment.h"],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = ["@jsoncpp"],
)

clang_tidy_test(
    name = "config_fragment_clang_tidy",
    srcs = [":config_fragment"],
    tags = ["clang_tidy", "clang-tidy"],
)

cc_library(
    name = "config_utils",
    srcs = ["config_utils.cpp"],
    hdrs = ["config_utils.h"],
    copts = COPTS,
    strip_include_prefix = "//cuttlefish",
    deps = [
        "//cuttlefish/common/libs/utils",
        "//cuttlefish/common/libs/utils:environment",
        "//cuttlefish/host/libs/config:config_constants",
        "//libbase",
    ],
)

clang_tidy_test(
    name = "config_utils_clang_tidy",
    srcs = [":config_utils"],
    tags = ["clang_tidy", "clang-tidy"],
)
